use crate::load::LoadSources;
use crate::{Artichoke, ArtichokeError};

pub fn init(interp: &Artichoke) -> Result<(), ArtichokeError> {
    <% constants.each do |(constant, klass)| %>
    <% if klass == "Class" %>
    interp
        .0
        .borrow_mut()
        .def_class::<<%= constant %>>("<%= constant %>", None, None);
    <% elsif klass == "Module" %>
    interp
        .0
        .borrow_mut()
        .def_module::<<%= constant %>>("<%= constant %>", None);
    <% else %>
    // Skipping constant <%= constant %> with class <%= klass %>
    <% end %>
    <% end %>
    <% sources.each do |(file, source)| %>
    interp.def_rb_source_file(
        "<%= file %>.rb",
        include_str!(concat!(
          env!("OUT_DIR"),
          "<%= File::ALT_SEPARATOR.nil? ? File::SEPARATOR : File::ALT_SEPARATOR %>", "<%= File.join("src", "generated", "#{file}.rb") %>"
        ))
    )?;
    <% end %>
    Ok(())
}
<% constants.each_with_index do |(constant, _), i| %>
pub struct <%= constant %>;
<% end %>
